# python version 1.0						DO NOT EDIT
#
# Generated by smidump version 0.4.8:
#
#   smidump -f python CISCO-RTTMON-TC-MIB

FILENAME = "/opt/librenms/mibs/cisco/CISCO-RTTMON-TC-MIB"

MIB = {
    "moduleName" : "CISCO-RTTMON-TC-MIB",

    "CISCO-RTTMON-TC-MIB" : {
        "nodetype" : "module",
        "language" : "SMIv2",
        "organization" :    
            """Cisco Systems, Inc.""",
        "contact" : 
            """Cisco Systems, Inc.
Customer Service 

Postal: 170 W Tasman Drive
San Jose, CA 95134

Tel: +1 800 553 NETS
Email: cs-ipsla@cisco.com""",
        "description" :
            """This MIB contains textual conventions used by
CISCO-RTTMON-MIB, CISCO-RTTMON-RTP-MIB and 
CISCO-RTTMON-ICMP-MIB, but they are not limited 
to only these MIBs. 
These textual conventions were originally defined in 
CISCO-RTTMON-MIB.

Acronyms:
  FEC: Forward Equivalence Class
  LPD: Label Path Discovery
  LSP: Label Switched Path
  MPLS: Multi Protocol Label Switching
  RTT: Round Trip Time
  SAA: Service Assurance Agent
  VPN: Virtual Private Network
  CFM: Connection Fault Management""",
        "revisions" : (
            {
                "date" : "2017-09-06 00:00",
                "description" :
                    """[Revision added by libsmi due to a LAST-UPDATED clause.]""",
            },
            {
                "date" : "2017-08-03 00:00",
                "description" :
                    """Added a new TC cipslaPercentileVar""",
            },
            {
                "date" : "2014-03-19 00:00",
                "description" :
                    """Added new fabricPathEcho type to RttMonRttType and
fabricPathEchoAppl type to RttMonProtocol""",
            },
            {
                "date" : "2013-11-26 00:00",
                "description" :
                    """Added new RttMonReactVar type named 'protocolSpecificError'""",
            },
            {
                "date" : "2012-11-02 00:00",
                "description" :
                    """Added RttMonScheduleStartType TC.

Added  enumeration y1731dmmv1 to RttMonProtocol.

Added the following to RttMonReactVar:
  lpdGroup, lpdTreeTrace, lpdAll,
  unavailSD, unavailDS, pktLossPctSD,
  pktLossPctDS, rttPct, maxOfLatencySDPct,
  maxOfLatencyDSPct, latencySDAvgPct, latencyDSAvgPct,
  jitterSDAvgPct, jitterDSAvgPct, jitterAvgPct,
  overThreshold.""",
            },
            {
                "date" : "2012-05-25 00:00",
                "description" :
                    """Added enumeration y1731slm to RttMonProtocol

Added the following to RttResopnseSense.
 statsRetrieveOk, statsRetrieveNoConnect,  
 statsRetrieveVersionFail, statsRetrieveInternalError,
 statsRetrieveAbort, statsRetrieveFail,
 statsRetrieveAuthFail, statsRetrieveFormatError,
 statsRetrievePortInUse.

For enumeration from controlOk to controlPortInUse, changed the
prefix from control to enable.""",
            },
            {
                "date" : "2011-09-15 00:00",
                "description" :
                    """Updated following textual conventions to include Y1731
and Multicast extensions.
-RttMonRttType, RttMonProtocol.""",
            },
            {
                "date" : "2010-04-26 00:00",
                "description" :
                    """Added enumeration 'video' to RttMonRttType TC.""",
            },
            {
                "date" : "2006-08-11 00:00",
                "description" :
                    """Added RttMonIdLst and RttMonCtrlIndex textual conventions.""",
            },
            {
                "date" : "2006-07-17 00:00",
                "description" :
                    """Added enumeration 'lspPingPseudowire' to RttMonRttType TC.""",
            },
            {
                "date" : "2006-03-02 00:00",
                "description" :
                    """Added ethernetPing and ethernetJitter in RttMonRttType.
Added ethernetPingAppl and ethernetJitterAppl 
in RttMonProtocol""",
            },
            {
                "date" : "2005-08-09 00:00",
                "description" :
                    """Initial version of this MIB module.""",
            },
        ),
        "identity node" : "ciscoRttMonTCMIB",
    },

    "imports" : (
        {"module" : "SNMPv2-SMI", "name" : "MODULE-IDENTITY"},
        {"module" : "SNMPv2-SMI", "name" : "Unsigned32"},
        {"module" : "SNMPv2-SMI", "name" : "Integer32"},
        {"module" : "SNMPv2-TC", "name" : "TEXTUAL-CONVENTION"},
        {"module" : "CISCO-SMI", "name" : "ciscoMgmt"},
    ),

    "typedefs" : {
        "RttMonScheduleStartType" : {
            "basetype" : "Enumeration",
            "status" : "current",
            "pending" : {
                "nodetype" : "namednumber",
                "number" : "1"
            },
            "now" : {
                "nodetype" : "namednumber",
                "number" : "2"
            },
            "random" : {
                "nodetype" : "namednumber",
                "number" : "3"
            },
            "after" : {
                "nodetype" : "namednumber",
                "number" : "4"
            },
            "specific" : {
                "nodetype" : "namednumber",
                "number" : "5"
            },
            "description" :
                """These are defined values for scheduling the start time of a
probe

pending(1)    - Pending state
now(2)        - Schedule the start time of probe to current time
                and probe is immediately started
random(3)     - Schedule the start time of probe at a random 
                time over a range.
after(4)      - Schedule the start time of probe after a certain
                amount of time from now.
specific(5)   - Schedule the start time of probe at a specific
                given time interval""",
        },
        "RttReset" : {
            "basetype" : "Enumeration",
            "status" : "current",
            "ready" : {
                "nodetype" : "namednumber",
                "number" : "1"
            },
            "reset" : {
                "nodetype" : "namednumber",
                "number" : "2"
            },
            "description" :
                """When the value set to 'reset', the entire RTT application
goes through a reset sequence, making a best
effort to revert to its startup condition. At other times,
the value is 'ready'.""",
        },
        "RttMonOperation" : {
            "basetype" : "Enumeration",
            "status" : "current",
            "notApplicable" : {
                "nodetype" : "namednumber",
                "number" : "0"
            },
            "httpGet" : {
                "nodetype" : "namednumber",
                "number" : "1"
            },
            "httpRaw" : {
                "nodetype" : "namednumber",
                "number" : "2"
            },
            "ftpGet" : {
                "nodetype" : "namednumber",
                "number" : "3"
            },
            "ftpPassive" : {
                "nodetype" : "namednumber",
                "number" : "4"
            },
            "ftpActive" : {
                "nodetype" : "namednumber",
                "number" : "5"
            },
            "voipDTAlertRinging" : {
                "nodetype" : "namednumber",
                "number" : "6"
            },
            "voipDTConnectOK" : {
                "nodetype" : "namednumber",
                "number" : "7"
            },
            "description" :
                """The following are specific RTT operations for a
particular probe type:
notApplicable(0)         - This object is not applicable for the
                           probe type.
httpGet(1)               - HTTP get request
httpRaw(2)               - HTTP request with user defined payload
ftpGet(3)                - FTP get request
ftpPassive(4)            - FTP passive mode
ftpActive(5)             - FTP active mode
voipDTAlertRinging(6)    - Voip post dial delay detect point:
                           Alerting / Ringing
voipDTConnectOK(7)       - Voip post dial delay detect point:
                           Connect /OK""",
        },
        "RttResponseSense" : {
            "basetype" : "Enumeration",
            "status" : "current",
            "other" : {
                "nodetype" : "namednumber",
                "number" : "0"
            },
            "ok" : {
                "nodetype" : "namednumber",
                "number" : "1"
            },
            "disconnected" : {
                "nodetype" : "namednumber",
                "number" : "2"
            },
            "overThreshold" : {
                "nodetype" : "namednumber",
                "number" : "3"
            },
            "timeout" : {
                "nodetype" : "namednumber",
                "number" : "4"
            },
            "busy" : {
                "nodetype" : "namednumber",
                "number" : "5"
            },
            "notConnected" : {
                "nodetype" : "namednumber",
                "number" : "6"
            },
            "dropped" : {
                "nodetype" : "namednumber",
                "number" : "7"
            },
            "sequenceError" : {
                "nodetype" : "namednumber",
                "number" : "8"
            },
            "verifyError" : {
                "nodetype" : "namednumber",
                "number" : "9"
            },
            "applicationSpecific" : {
                "nodetype" : "namednumber",
                "number" : "10"
            },
            "dnsServerTimeout" : {
                "nodetype" : "namednumber",
                "number" : "11"
            },
            "tcpConnectTimeout" : {
                "nodetype" : "namednumber",
                "number" : "12"
            },
            "httpTransactionTimeout" : {
                "nodetype" : "namednumber",
                "number" : "13"
            },
            "dnsQueryError" : {
                "nodetype" : "namednumber",
                "number" : "14"
            },
            "httpError" : {
                "nodetype" : "namednumber",
                "number" : "15"
            },
            "error" : {
                "nodetype" : "namednumber",
                "number" : "16"
            },
            "mplsLspEchoTxError" : {
                "nodetype" : "namednumber",
                "number" : "17"
            },
            "mplsLspUnreachable" : {
                "nodetype" : "namednumber",
                "number" : "18"
            },
            "mplsLspMalformedReq" : {
                "nodetype" : "namednumber",
                "number" : "19"
            },
            "mplsLspReachButNotFEC" : {
                "nodetype" : "namednumber",
                "number" : "20"
            },
            "enableOk" : {
                "nodetype" : "namednumber",
                "number" : "21"
            },
            "enableNoConnect" : {
                "nodetype" : "namednumber",
                "number" : "22"
            },
            "enableVersionFail" : {
                "nodetype" : "namednumber",
                "number" : "23"
            },
            "enableInternalError" : {
                "nodetype" : "namednumber",
                "number" : "24"
            },
            "enableAbort" : {
                "nodetype" : "namednumber",
                "number" : "25"
            },
            "enableFail" : {
                "nodetype" : "namednumber",
                "number" : "26"
            },
            "enableAuthFail" : {
                "nodetype" : "namednumber",
                "number" : "27"
            },
            "enableFormatError" : {
                "nodetype" : "namednumber",
                "number" : "28"
            },
            "enablePortInUse" : {
                "nodetype" : "namednumber",
                "number" : "29"
            },
            "statsRetrieveOk" : {
                "nodetype" : "namednumber",
                "number" : "30"
            },
            "statsRetrieveNoConnect" : {
                "nodetype" : "namednumber",
                "number" : "31"
            },
            "statsRetrieveVersionFail" : {
                "nodetype" : "namednumber",
                "number" : "32"
            },
            "statsRetrieveInternalError" : {
                "nodetype" : "namednumber",
                "number" : "33"
            },
            "statsRetrieveAbort" : {
                "nodetype" : "namednumber",
                "number" : "34"
            },
            "statsRetrieveFail" : {
                "nodetype" : "namednumber",
                "number" : "35"
            },
            "statsRetrieveAuthFail" : {
                "nodetype" : "namednumber",
                "number" : "36"
            },
            "statsRetrieveFormatError" : {
                "nodetype" : "namednumber",
                "number" : "37"
            },
            "statsRetrievePortInUse" : {
                "nodetype" : "namednumber",
                "number" : "38"
            },
            "description" :
                """These are the defined values for a completion status
of a RTT operation.  

other(0)         - the operation is not started or completed
                    or this object is not applicable for
                    the probe type.  
ok(1)            - a valid completion occurred and
                    timed successfully
disconnected(2)  - the operation did not occur because
                    the connection to the target
                    was lost
overThreshold(3) - a valid completion was received but
                    the completion time exceeded a
                    threshold value
timeout(4)       - an operation timed out; no completion
                    time recorded
busy(5)          - the operation did not occur because a
                    previous operation is still
                    outstanding
notConnected(6)  - the operation did not occur because no
                    connection (session) exists with the
                    target
dropped(7)       - the operation did not occur due to lack
                    of internal resource
sequenceError(8) - a completed operation did not contain 
                    the correct sequence id; no completion
                    time recorded
verifyError(9)   - a completed operation was received, but
                    the data it contained did not match
                    the expected data; no completion time 
                    recorded
applicationSpecific(10) 
                 - the application generating the operation
                    had a specific error
dnsServerTimeout(11) 
                 - DNS Server Timeout
tcpConnectTimeout(12)
                 - TCP Connect Timeout
httpTransactionTimeout(13)
                 - HTTP Transaction Timeout
dnsQueryError(14)
                 - DNS Query error (because of unknown address 
                   etc.,)
httpError(15)
                 - HTTP Response StatusCode is not OK (200),
                   or permenent redirect(301), temporary redirect
                   (302) then HTTP error is set.
error(16)
                 - if there are socket failures or some other 
                   errors not relavant to the actual probe, they 
                   are recorded under this error
mplsLspEchoTxError(17)
                 - MPLS echo request transmission failure.
mplsLspUnreachable(18)
                 - MPLS Target FEC not reachable or unsupported
                   mpls echo reply code.
mplsLspMalformedReq(19)
                 - MPLS echo request was malformalformed, pointed
                   out by the reply router.
mplsLspReachButNotFEC(20)
                 - MPLS echo request processed by the downstream
                   router but not the target.
enableOk(21) 
                 - Control enable request OK
enableNoConnect(22)
                 - Control enable request fail due to no connection to
                   the target.
enableVersionFail(23)
                 - Control enable request version fail.
enableInternalError(24)
                 - Control enable request internal error.
enableAbort(25)
                 - Control enable request abort.
enableFail(26)
                 - Control enable request fail.
enableAuthFail(27)
                 - Control enable request fail due to authentication
                   fail.
enableFormatError(28)
                 - Control enable request fail due to format error.
enablePortInUse(29)
                 - Control enable request fail due to port in use.
statsRetrieveOk(30)
                 - Stats retrieve request OK
statsRetrieveNoConnect(31)
                 - Stats retrieve request fail due to no connection 
                   to the target.
statsRetrieveVersionFail(32)
                 - Stats retrieve request version fail.
statsRetrieveInternalError(33)
                 - Stats retrieve request internal error.
statsRetrieveAbort(34)
                 - Stats retrieve request abort.
statsRetrieveFail(35)
                 - Stats retrieve request fail.
statsRetrieveAuthFail(36)
                 - Stats retrieve request fail due to authentication fail.
statsRetrieveFormatError(37)
                 - Stats retrieve request fail due to format error.
statsRetrievePortInUse(38)
                 - Stats retrieve request fail due to port in use.""",
        },
        "RttMonRttType" : {
            "basetype" : "Enumeration",
            "status" : "current",
            "echo" : {
                "nodetype" : "namednumber",
                "number" : "1"
            },
            "pathEcho" : {
                "nodetype" : "namednumber",
                "number" : "2"
            },
            "fileIO" : {
                "nodetype" : "namednumber",
                "number" : "3"
            },
            "script" : {
                "nodetype" : "namednumber",
                "number" : "4"
            },
            "udpEcho" : {
                "nodetype" : "namednumber",
                "number" : "5"
            },
            "tcpConnect" : {
                "nodetype" : "namednumber",
                "number" : "6"
            },
            "http" : {
                "nodetype" : "namednumber",
                "number" : "7"
            },
            "dns" : {
                "nodetype" : "namednumber",
                "number" : "8"
            },
            "jitter" : {
                "nodetype" : "namednumber",
                "number" : "9"
            },
            "dlsw" : {
                "nodetype" : "namednumber",
                "number" : "10"
            },
            "dhcp" : {
                "nodetype" : "namednumber",
                "number" : "11"
            },
            "ftp" : {
                "nodetype" : "namednumber",
                "number" : "12"
            },
            "voip" : {
                "nodetype" : "namednumber",
                "number" : "13"
            },
            "rtp" : {
                "nodetype" : "namednumber",
                "number" : "14"
            },
            "lspGroup" : {
                "nodetype" : "namednumber",
                "number" : "15"
            },
            "icmpjitter" : {
                "nodetype" : "namednumber",
                "number" : "16"
            },
            "lspPing" : {
                "nodetype" : "namednumber",
                "number" : "17"
            },
            "lspTrace" : {
                "nodetype" : "namednumber",
                "number" : "18"
            },
            "ethernetPing" : {
                "nodetype" : "namednumber",
                "number" : "19"
            },
            "ethernetJitter" : {
                "nodetype" : "namednumber",
                "number" : "20"
            },
            "lspPingPseudowire" : {
                "nodetype" : "namednumber",
                "number" : "21"
            },
            "video" : {
                "nodetype" : "namednumber",
                "number" : "22"
            },
            "y1731Delay" : {
                "nodetype" : "namednumber",
                "number" : "23"
            },
            "y1731Loss" : {
                "nodetype" : "namednumber",
                "number" : "24"
            },
            "mcastJitter" : {
                "nodetype" : "namednumber",
                "number" : "25"
            },
            "fabricPathEcho" : {
                "nodetype" : "namednumber",
                "number" : "26"
            },
            "description" :
                """Specifies the type of RTT operation to be performed.

The value 'echo' will cause the RTT application to
perform a timed echo request/response operation directed
at the 'RttMonTargetAddress'.

The value 'pathEcho' will cause the RTT application
to perform path discovery to the 'RttMonTargetAddress', 
then it will perform a timed echo request/response 
operation directed at the each hop along the path.  
This operation will provide two types of information, 
first the path and second the time delay along the path.

NOTE:  The 'pathEcho' time delay operation is a heuristic
       measurement because an intermediate hop may forward
       the different echo request/response at different
       rates.  Thus the time delay difference between two
       hops along a path may contain very little 'true'
       statistical meaning. 

The value 'fileIO' will cause the RTT application to 
write, read, or write/read a file to a preconfigured 
file server.

The value 'script' will cause the RTT application to
execute a preconfigured script.

The value 'udpEcho' will cause the RTT application
to perform a timed udp packet send/receive operation 
directed at the 'RttMonTargetAddress'.

The value 'tcpConnect' will cause the RTT application
to perform a timed tcp connect operation directed at the 
'RttMonTargetAddress'.

The value 'http' will cause the RTT application
to perform a download of the object specified in the URL.

The value 'dns' will cause the RTT application
to perform a name lookup of an IP Address or a hostname.

The value 'jitter' will cause the RTT application
to perform delay variance analysis.

The value 'dlsw' will cause the RTT application
to perform a keepalive operation to measure the response 
time of a DLSw peer.

The value 'dhcp' will cause the RTT application
to perform an IP Address lease request/teardown operation.

The value 'voip' will cause the RTT application
to perform call set up operation to measure the response.

The value 'rtp' will cause the RTT application to perform
delay variance analysis for RTP packet.

The value 'lspGroup' will cause the RTT application to
logically
group Label Switched Paths discovered as part of LSP Path
Discovery to the target and perform an RTT operation end to end
over each path in the Group. The type of operation configured
is determined by rttMplsVpnMonCtrlRttType.

The value 'icmpjitter' will cause the RTT application
to perform delay variance analysis using ICMP timestamp
packets.

The value of 'lspPingIpv4' will cause the RTT application to
perform ping over LSP path.

The value of 'lspTraceIpv4' will cause the RTT application to
perform trace over LSP path.

The value of 'ethernetPing' will cause the RTT application to
perform delay variance analysis using regular 802.1ag loopback
frame.

The value of 'ethernetJitter' will cause the RTT application to
perform delay variance analysis using CFM frame.

The value of 'lspPingPseudowire' will cause the RTT application
to perform LSP Ping over Pseudowire and measure response time.

The value 'video' will cause the the RTT application to perform
a video stream analysis directed at the 'RttMonTargetAddress'.

The value 'y1731Delay' will cause the RTT application to
perform
a ITU-T standard Y.1731 delay variance analysis.

The value 'y1731Loss' will cause the RTT application to perform
a ITU-T standard Y.1731 loss measure analysis.

The value 'mcastJitter' will cause the RTT application to
perform udp jitter stream analysis on a multicast network.

The value 'fabricPathEcho' will cause the RTT application to
perform delay performance measurment and verify connectivity in
a Fabric Path Network.""",
        },
        "RttMplsVpnMonRttType" : {
            "basetype" : "Enumeration",
            "status" : "current",
            "jitter" : {
                "nodetype" : "namednumber",
                "number" : "1"
            },
            "echo" : {
                "nodetype" : "namednumber",
                "number" : "2"
            },
            "pathEcho" : {
                "nodetype" : "namednumber",
                "number" : "3"
            },
            "description" :
                """Specifies the type of RTT operation to be performed for
Auto SAA L3 MPLS VPN.

The value 'jitter' will cause the Auto SAA L3 MPLS VPN to
automatically configure jitter operations.

The value 'echo' will cause the Auto SAA L3 MPLS VPN to
automatically configure jitter operations.

The value 'pathEcho' will cause the Auto SAA L3 MPLS VPN to
automatically configure jitter operations.""",
        },
        "RttMplsVpnMonLpdFailureSense" : {
            "basetype" : "Enumeration",
            "status" : "current",
            "unknown" : {
                "nodetype" : "namednumber",
                "number" : "1"
            },
            "noPath" : {
                "nodetype" : "namednumber",
                "number" : "2"
            },
            "allPathsBroken" : {
                "nodetype" : "namednumber",
                "number" : "3"
            },
            "allPathsUnexplorable" : {
                "nodetype" : "namednumber",
                "number" : "4"
            },
            "allPathsBrokenOrUnexplorable" : {
                "nodetype" : "namednumber",
                "number" : "5"
            },
            "timeout" : {
                "nodetype" : "namednumber",
                "number" : "6"
            },
            "error" : {
                "nodetype" : "namednumber",
                "number" : "7"
            },
            "description" :
                """These are the defined values for the causes of failure in
LSP Path Discovery.

unknown(1)                      - The cause of failure for the
                                  LSP Path Discovery cannot be
                                  determined. The discovery for
                                  the target PE may not have 
                                  started.
noPath(2)                       - No paths were found to the
                                  target FEC while doing the
                                  LSP Path Discovery.
allPathsBroken(3)               - All paths to the target FEC
                                  are broken. This means an
                                  untagged interface on the LSP
                                  to the target.
allPathsUnexplorable(4)         - All paths to the target FEC are
                                  unexplorable. This identifies
                                  a case where there is some
                                  problem in reaching the next
                                  hop while doing Discovery.
allPathsBrokenOrUnexplorable(5) - All paths to the target FEC are
                                  are either broken or
                                  unexplorable.
timeout(6)                      - The LSP Path Discovery could
                                  not be completed for the
                                  target FEC within the
                                  configured time.
error(7)                        - Error occurred while
                                  performing LSP Path Discovery.
                                  It might be also due to some
                                  reasons unrelated to LSP Path
                                  Discovery.""",
        },
        "RttMplsVpnMonLpdGrpStatus" : {
            "basetype" : "Enumeration",
            "status" : "current",
            "unknown" : {
                "nodetype" : "namednumber",
                "number" : "1"
            },
            "up" : {
                "nodetype" : "namednumber",
                "number" : "2"
            },
            "partial" : {
                "nodetype" : "namednumber",
                "number" : "3"
            },
            "down" : {
                "nodetype" : "namednumber",
                "number" : "4"
            },
            "description" :
                """These are the defined values for the status of the LPD Group.

unknown(1) - This indicates that some/all of the probes which are
             part of the LPD group have not completed even
             a single operation, so the group status cannot be
             identified.
     up(2) - This state indicates that all the probes which are
             part of the LPD group are up with latest return
             code as 'ok'.
partial(3) - This state indicates that some probes are up and
             running fine and some are not 'ok'.
   down(4) - This state indicates that all the probes to the
             target are not running fine. This state indicates
             that there is connectivity problem to the target
             PE.""",
        },
        "RttMonProtocol" : {
            "basetype" : "Enumeration",
            "status" : "current",
            "notApplicable" : {
                "nodetype" : "namednumber",
                "number" : "1"
            },
            "ipIcmpEcho" : {
                "nodetype" : "namednumber",
                "number" : "2"
            },
            "ipUdpEchoAppl" : {
                "nodetype" : "namednumber",
                "number" : "3"
            },
            "snaRUEcho" : {
                "nodetype" : "namednumber",
                "number" : "4"
            },
            "snaLU0EchoAppl" : {
                "nodetype" : "namednumber",
                "number" : "5"
            },
            "snaLU2EchoAppl" : {
                "nodetype" : "namednumber",
                "number" : "6"
            },
            "snaLU62Echo" : {
                "nodetype" : "namednumber",
                "number" : "7"
            },
            "snaLU62EchoAppl" : {
                "nodetype" : "namednumber",
                "number" : "8"
            },
            "appleTalkEcho" : {
                "nodetype" : "namednumber",
                "number" : "9"
            },
            "appleTalkEchoAppl" : {
                "nodetype" : "namednumber",
                "number" : "10"
            },
            "decNetEcho" : {
                "nodetype" : "namednumber",
                "number" : "11"
            },
            "decNetEchoAppl" : {
                "nodetype" : "namednumber",
                "number" : "12"
            },
            "ipxEcho" : {
                "nodetype" : "namednumber",
                "number" : "13"
            },
            "ipxEchoAppl" : {
                "nodetype" : "namednumber",
                "number" : "14"
            },
            "isoClnsEcho" : {
                "nodetype" : "namednumber",
                "number" : "15"
            },
            "isoClnsEchoAppl" : {
                "nodetype" : "namednumber",
                "number" : "16"
            },
            "vinesEcho" : {
                "nodetype" : "namednumber",
                "number" : "17"
            },
            "vinesEchoAppl" : {
                "nodetype" : "namednumber",
                "number" : "18"
            },
            "xnsEcho" : {
                "nodetype" : "namednumber",
                "number" : "19"
            },
            "xnsEchoAppl" : {
                "nodetype" : "namednumber",
                "number" : "20"
            },
            "apolloEcho" : {
                "nodetype" : "namednumber",
                "number" : "21"
            },
            "apolloEchoAppl" : {
                "nodetype" : "namednumber",
                "number" : "22"
            },
            "netbiosEchoAppl" : {
                "nodetype" : "namednumber",
                "number" : "23"
            },
            "ipTcpConn" : {
                "nodetype" : "namednumber",
                "number" : "24"
            },
            "httpAppl" : {
                "nodetype" : "namednumber",
                "number" : "25"
            },
            "dnsAppl" : {
                "nodetype" : "namednumber",
                "number" : "26"
            },
            "jitterAppl" : {
                "nodetype" : "namednumber",
                "number" : "27"
            },
            "dlswAppl" : {
                "nodetype" : "namednumber",
                "number" : "28"
            },
            "dhcpAppl" : {
                "nodetype" : "namednumber",
                "number" : "29"
            },
            "ftpAppl" : {
                "nodetype" : "namednumber",
                "number" : "30"
            },
            "mplsLspPingAppl" : {
                "nodetype" : "namednumber",
                "number" : "31"
            },
            "voipAppl" : {
                "nodetype" : "namednumber",
                "number" : "32"
            },
            "rtpAppl" : {
                "nodetype" : "namednumber",
                "number" : "33"
            },
            "icmpJitterAppl" : {
                "nodetype" : "namednumber",
                "number" : "34"
            },
            "ethernetPingAppl" : {
                "nodetype" : "namednumber",
                "number" : "35"
            },
            "ethernetJitterAppl" : {
                "nodetype" : "namednumber",
                "number" : "36"
            },
            "videoAppl" : {
                "nodetype" : "namednumber",
                "number" : "37"
            },
            "y1731dmm" : {
                "nodetype" : "namednumber",
                "number" : "38"
            },
            "y17311dm" : {
                "nodetype" : "namednumber",
                "number" : "39"
            },
            "y1731lmm" : {
                "nodetype" : "namednumber",
                "number" : "40"
            },
            "mcastJitterAppl" : {
                "nodetype" : "namednumber",
                "number" : "41"
            },
            "y1731slm" : {
                "nodetype" : "namednumber",
                "number" : "42"
            },
            "y1731dmmv1" : {
                "nodetype" : "namednumber",
                "number" : "43"
            },
            "fabricPathEchoAppl" : {
                "nodetype" : "namednumber",
                "number" : "44"
            },
            "description" :
                """Specifies the protocol to be used to perform the timed
echo request/response.  The following protocols are
defined:

NOTE: All protocols that end in 'Appl' will support
      the asymetric request/response (ARR) protocol.  
      See the DESCRIPTION for ciscoRttMonMIB for a
      complete description of the asymetric 
      request/response protocol.

notApplicable     - no protocol is defined
ipIcmpEcho        - uses Echo Request/Reply as defined
                     in RFC792 for Internet Protocol
                     networks
ipUdpEchoAppl     - uses the UDP based echo server
snaRUEcho         - uses the REQECHO and ECHOTEST RU's
                     to an SSCP over an SNA LU-SSCP
                     session
snaLU0EchoAppl    - uses test RU's sent to the Echo 
                     Server over an SNA LU0-LU0 session
snaLU2EchoAppl    - uses test RU's sent to the Echo 
                     Server over an SNA LU2-LU2 session
snaLU62Echo       - uses the native appn ping ie. aping 
snaLU62EchoAppl   - uses test RU's sent to the ARR
                     Echo Server over an SNA LU6.2-LU6.2
                     session
appleTalkEcho     - uses Echo Request/Reply as defined
                     for appleTalk networks
appleTalkEchoAppl - uses the appleTalk based echo
                     server
decNetEcho        - uses Echo Request/Reply as defined
                     for DECNet networks
decNetEchoAppl    - uses the DECnet based echo server
ipxEcho           - uses Echo Request/Reply as defined
                     for Novell IPX networks
ipxEchoAppl       - uses the Novel IPX based echo
                     server
isoClnsEcho       - uses Echo Request/Reply as defined
                     for ISO CLNS networks
isoClnsEchoAppl   - uses the ISO CLNS based echo
                     server
vinesEcho         - uses Echo Request/Reply as defined
                     for VINES networks
vinesEchoAppl     - uses the VINES based echo server
xnsEcho           - uses Echo Request/Reply as defined
                     for XNS networks
xnsEchoAppl       - uses the XNS based echo server
apolloEcho        - uses Echo Request/Reply as defined
                     for APOLLO networks
apolloEchoAppl    - uses the APOLLO based echo
                     server
netbiosEchoAppl   - uses the netbios based echo
                     server
ipTcpConn         - uses the tcp's connect mechanism
httpAppl          - uses udp for name resolution, 
                    tcp connect and tcp data transfer
                    mechanisms for HTTP data download
                    from a particular HTTP Server
dnsAppl           - uses udp for name resolution
jitterAppl        - uses udp for packet transfers
dlswAppl          - uses tcp for sending keepalives
dhcpAppl          - uses udp for sending dhcp requests
ftpAppl           - uses tcp for connect & data transfer
mplsLspPingAppl   - uses MPLS Echo Request/Response as per
                    draft-ietf-mpls-lsp-ping-04 ietf
                    standard
voipAppl          - uses Symphony infrastructure to measure
                    H.323/SIP call set up time
rtpAppl           - uses Symphony infrastructure to measure
                    rtp packets delay variance.
icmpJitterAppl    - uses ICMP Timestamp for packet transfer 
                    to measure jitter.
ethernetPingAppl    - uses regular 802.1ag loopback frame
ethernetJitterAppl  - uses CFM frames .
videoAppl           - uses synthetic traffic depending on video 
                       profile
y1731dmm            - used to measure Y1731 delay
y17311dm            - used to measure Y1731 1DM
y1731lmm            - used to measure Y1731 Loss measurement
mcastJitterAppl     - uses udp jitter to measure multicast
                       network performance
y1731slm            - used to measure Y1731 Synthetic Loss
                       measurement
y1731dmmv1          - used to measure Y1731 DMMv1 measurement

fabricPathEchoAppl  - uses Fabric Path connect mechanism""",
        },
        "RttMonCodecType" : {
            "basetype" : "Enumeration",
            "status" : "current",
            "notApplicable" : {
                "nodetype" : "namednumber",
                "number" : "0"
            },
            "g711ulaw" : {
                "nodetype" : "namednumber",
                "number" : "1"
            },
            "g711alaw" : {
                "nodetype" : "namednumber",
                "number" : "2"
            },
            "g729a" : {
                "nodetype" : "namednumber",
                "number" : "3"
            },
            "description" :
                """Specifies the codec type to be used with the jitter probe.
The following codec types are defined:

notApplicable     - no CodecType is defined
g711ulaw          - uses G.711 U Law 64000 bps
g711alaw          - uses G.711 A Law 64000 bps
g729a             - uses G.729 8000 bps""",
        },
        "RttMonLSPPingReplyMode" : {
            "basetype" : "Enumeration",
            "status" : "current",
            "replyIpv4Udp" : {
                "nodetype" : "namednumber",
                "number" : "1"
            },
            "replyIpv4UdpRA" : {
                "nodetype" : "namednumber",
                "number" : "2"
            },
            "description" :
                """Specifies the Reply mode for the MPLS LSP Echo request
packets. The following reply modes are supported:

replyIpv4Udp(1)         - an mpls echo request will normally
                         have reply via IPv4 UDP packets.
replyIpv4UdpRA(2)       - reply via IPv4 UDP Router Alert. Used
                         when IPv4 return path is deemed 
                         unreliable.""",
        },
        "RttMonTargetAddress" : {
            "basetype" : "OctetString",
            "status" : "current",
            "description" :
                """A string which specifies the address of the target for
the RTT operation; a value of RttMonTargetAddress
which corresponds to a 'broadcast' address is disallowed.

The interpretation of this string depends on the type of
RTT operation selected, as specified by RttMonProtocol; 
consequently, this object cannot be created until 
RttMonProtocol has been created (or must be in the same 
PDU).

SNA addresses will be provided in ASCII, but will be
converted to EBCDIC

It is interpreted as follows, for the specified values of
RttMonProtocol:

ipIcmpEcho, ipUdpEchoAppl, ipTcpConn, jitterAppl, dlswAppl,
dnsAppl, httpAppl, and dhcpAppl
     - 4 octets

snaRUEcho
     - N octets, containing the value of the sna
        HOSTNAME of which the SSCP LU will be used
        for the operation.  For many systems this value
        can be empty, and the system will use the
        implied SSCP LU.  For example 'NSPECHO'.

snaLU0EchoAppl and snaLU2EchoAppl 
     - N octets, the first x octets are the HOSTNAME
        (Alternatively, this could be a PU name defined
        to transport to the desired HOST), the second
        y octets are the APPLID, and the last z octets 
        are the MODENAME of the Echo Server (blank 
        for a MODENAME default). The address will be 
        encoded with a size byte preceding each of 
        the x y and z called s. For example sxsysz 
        as in '0x06CWBC060x07NSPECHO0x00' where 
        HOSTNAME = CWBC06, APPLID = NSPECHO, and 
        MODENAME is defaulted to 8 blanks.  
        NOTE: MODENAME is either size 0 or 8.

snaLU62Echo and snaLU62EchoAppl
     - N octets, the first x octets are the LU-NAME,
        the second y octets are the TP-NAME, and the 
        last z octets are the MODENAME of the Echo 
        Server.  The address will be encoded with a size
        byte preceding each of the x y and z called s.
        For example sxsysz (zero size before z for a
        MODENAME default).  The LU-NAME is composed of
        8 bytes '.' 8 bytes.  The Transaction Program
        name (TP-NAME) is 1-64 bytes.  The MODENAME
        is 8 bytes.

appleTalkEcho, appleTalkEchoAppl

decNetEcho, decNetEchoAppl

ipxEcho, ipxEchoAppl

isoClnsEcho, isoClnsEchoAppl

vinesEcho, vinesEchoAppl

xnsEcho, xnsEchoAppl
apolloEcho, apolloEchoAppl

netbiosEchoAppl, voipAppl
        - unsupported protocols.

mplsLspPingAppl
        - 8 octets, the first 4 octets are the FEC address
        and the next 4 octets are the FEC address mask.""",
        },
        "RttMonReactVar" : {
            "basetype" : "Enumeration",
            "status" : "current",
            "rtt" : {
                "nodetype" : "namednumber",
                "number" : "1"
            },
            "jitterSDAvg" : {
                "nodetype" : "namednumber",
                "number" : "2"
            },
            "jitterDSAvg" : {
                "nodetype" : "namednumber",
                "number" : "3"
            },
            "packetLossSD" : {
                "nodetype" : "namednumber",
                "number" : "4"
            },
            "packetLossDS" : {
                "nodetype" : "namednumber",
                "number" : "5"
            },
            "mos" : {
                "nodetype" : "namednumber",
                "number" : "6"
            },
            "timeout" : {
                "nodetype" : "namednumber",
                "number" : "7"
            },
            "connectionLoss" : {
                "nodetype" : "namednumber",
                "number" : "8"
            },
            "verifyError" : {
                "nodetype" : "namednumber",
                "number" : "9"
            },
            "jitterAvg" : {
                "nodetype" : "namednumber",
                "number" : "10"
            },
            "icpif" : {
                "nodetype" : "namednumber",
                "number" : "11"
            },
            "packetMIA" : {
                "nodetype" : "namednumber",
                "number" : "12"
            },
            "packetLateArrival" : {
                "nodetype" : "namednumber",
                "number" : "13"
            },
            "packetOutOfSequence" : {
                "nodetype" : "namednumber",
                "number" : "14"
            },
            "maxOfPositiveSD" : {
                "nodetype" : "namednumber",
                "number" : "15"
            },
            "maxOfNegativeSD" : {
                "nodetype" : "namednumber",
                "number" : "16"
            },
            "maxOfPositiveDS" : {
                "nodetype" : "namednumber",
                "number" : "17"
            },
            "maxOfNegativeDS" : {
                "nodetype" : "namednumber",
                "number" : "18"
            },
            "iaJitterDS" : {
                "nodetype" : "namednumber",
                "number" : "19"
            },
            "frameLossDS" : {
                "nodetype" : "namednumber",
                "number" : "20"
            },
            "mosLQDS" : {
                "nodetype" : "namednumber",
                "number" : "21"
            },
            "mosCQDS" : {
                "nodetype" : "namednumber",
                "number" : "22"
            },
            "rFactorDS" : {
                "nodetype" : "namednumber",
                "number" : "23"
            },
            "successivePacketLoss" : {
                "nodetype" : "namednumber",
                "number" : "24"
            },
            "maxOfLatencyDS" : {
                "nodetype" : "namednumber",
                "number" : "25"
            },
            "maxOfLatencySD" : {
                "nodetype" : "namednumber",
                "number" : "26"
            },
            "latencyDSAvg" : {
                "nodetype" : "namednumber",
                "number" : "27"
            },
            "latencySDAvg" : {
                "nodetype" : "namednumber",
                "number" : "28"
            },
            "packetLoss" : {
                "nodetype" : "namednumber",
                "number" : "29"
            },
            "iaJitterSD" : {
                "nodetype" : "namednumber",
                "number" : "30"
            },
            "mosCQSD" : {
                "nodetype" : "namednumber",
                "number" : "31"
            },
            "rFactorSD" : {
                "nodetype" : "namednumber",
                "number" : "32"
            },
            "lpdGroup" : {
                "nodetype" : "namednumber",
                "number" : "33"
            },
            "lpdTreeTrace" : {
                "nodetype" : "namednumber",
                "number" : "34"
            },
            "lpdAll" : {
                "nodetype" : "namednumber",
                "number" : "35"
            },
            "unavailSD" : {
                "nodetype" : "namednumber",
                "number" : "36"
            },
            "unavailDS" : {
                "nodetype" : "namednumber",
                "number" : "37"
            },
            "pktLossPctSD" : {
                "nodetype" : "namednumber",
                "number" : "38"
            },
            "pktLossPctDS" : {
                "nodetype" : "namednumber",
                "number" : "39"
            },
            "rttPct" : {
                "nodetype" : "namednumber",
                "number" : "40"
            },
            "maxOfLatencySDPct" : {
                "nodetype" : "namednumber",
                "number" : "41"
            },
            "maxOfLatencyDSPct" : {
                "nodetype" : "namednumber",
                "number" : "42"
            },
            "latencySDAvgPct" : {
                "nodetype" : "namednumber",
                "number" : "43"
            },
            "latencyDSAvgPct" : {
                "nodetype" : "namednumber",
                "number" : "44"
            },
            "jitterSDAvgPct" : {
                "nodetype" : "namednumber",
                "number" : "45"
            },
            "jitterDSAvgPct" : {
                "nodetype" : "namednumber",
                "number" : "46"
            },
            "jitterAvgPct" : {
                "nodetype" : "namednumber",
                "number" : "47"
            },
            "overThreshold" : {
                "nodetype" : "namednumber",
                "number" : "48"
            },
            "protocolSpecificError" : {
                "nodetype" : "namednumber",
                "number" : "49"
            },
            "description" :
                """The following are specific Reaction variables for a
particular probe type:
 rtt(1)            - Round Trip Time
 jitterSDAvg(2)    - Jitter average from source to Destination
 jitterDSAvg(3)    - Jitter average from destination to source
 packetLossSD(4)   - Packet loss from source to destination
 packetLossDS(5)   - Packet loss from destination to source
 mos(6)            - Mean Opinion Score
 timeout(7)        - Timeout of the Operation
 connectionLoss(8) - Connection Failed to the destination
 verifyError(9)    - Data corruption occurs
 jitterAvg(10)     - Jitter Average in both the directions
 icpif(11)         - Calculated Planning Impairment Factor
 packetMIA(12)     - Missing In Action
 packetLateArrival(13)   - Packets arriving Late
 packetOutOfSequence(14) - Packets arriving out of sequence
 maxOfPositiveSD(15)     - Maximum positive jitter from
                           Source to Destination
 maxOfNegativeSD(16)     - Maximum negative jitter from
                           Source to Destination
 maxOfPositiveDS(17)     - Maximum positive jitter from
                           Destination to Source
 maxOfNegativeDS(18)     - Maximum negative jitter from
                           Destination to Source.
 iaJitterDS(19)          - Inter arrival jitter from
                           Destination to Source
 frameLossDS(20)         - Number of frame loss recorded
                           at source DSP
 mosLQDS(21)             - Listener quality MOS at Source
 mosCQDS(22)             - Conversational quality MOS at source
 rFactorDS(23)           - R-Factor value at Destination.
 successivePacketLoss(24)- Successive Dropped Packet
 maxOfLatencyDS(25)      - Maximum Latency from Destination 
                           to Source
 maxOfLatencySD(26)      - Maximum Latency from Source 
                           to Destination
 latencyDSAvg(27)        - Latency average from Destination 
                           to Source
 latencySDAvg(28)        - Latency average from Source 
                           to Destination
 packetLoss(29)          - Packets loss in both directions
 iaJitterSD(30)          - Inter arrival jitter from
                           Source to Destination
 mosCQSD(31)             - Conversational quality MOS at 
                           Destination
 rFactorSD(32)           - R-Factor value at Destination.
 lpdGroup(33)            - Label Path Discovery (LPD) group
 lpdTreeTrace(34)        - LPD Tree Trace
 lpdAll(35)              - LPD All
 unavailSD(36)           - Unavailability threshold crossing
                           crossing - Source to Destination
 unavailDS(37)           - Unavailability threshold crossing
                           crossing - Destination to source
 pktLossPctSD(38)        - Loss ratio threshold crossing
                           based on percent - Source to
                           Destination
 pktLossPctDS(39)        - Loss ratio threshold crossing
                           based on percent - Destination to
                           Source
 rttPct(40)              - Percentile Round Trip Time
 maxOfLatencySDPct(41)   - Percentile Maximum Latency from
                           Source to Destination
 maxOfLatencyDSPct(42)   - Percentile Maximum Latency from
                           Destination to Source
 latencySDAvgPct(43)     - Percentile Latency Average from
                           Source to Destination
 latencyDSAvgPct(44)     - Percentile Latency Average from
                           Destination to Source
 jitterSDAvgPct(45)      - Percentile Jitter Average from
                           Source to Destination
 jitterDSAvgPct(46)      - Percentile Jitter Average from
                           Destination to Source
 jitterAvgPct(47)        - Percentile Jitter Average in
                           both directions
 overThreshold(48)       - Percent of Round Trip Times
                           over threshold.
 protocolSpecificError(49)-Any protocol specific error.""",
        },
        "RttMonIdLst" : {
            "basetype" : "OctetString",
            "status" : "current",
            "ranges" : [
            {
                "min" : "0",
                "max" : "255"
            },
            ],
            "range" : {
                "min" : "0",
                "max" : "255"
            },
            "description" :
                """A string that specifies a list of the IP SLA probe
identifiers or other numeric identifiers.
The identifiers will be specified in the following form.
(a) Individual identifiers with comma separated as 1,5,3.
(b) Range form including hyphens with multiple ranges
being 
   separated by comma as 1-10,12-34.
(c) Mix of the above two forms as 1,2,4-10,12,15,19-25.""",
        },
        "RttMonCtrlIndex" : {
            "basetype" : "Unsigned32",
            "status" : "current",
            "ranges" : [
            {
                "min" : "1",
                "max" : "2147483647"
            },
            ],
            "range" : {
                "min" : "1",
                "max" : "2147483647"
            },
            "description" :
                """The value of this object identifies the row in the
ipslaEthernetGrpCtrlTable and ipslaEthernetGrpReactTable.
It can be used for other IP SLA control tables.""",
        },
        "CipslaPercentileVar" : {
            "basetype" : "Enumeration",
            "status" : "current",
            "rtt" : {
                "nodetype" : "namednumber",
                "number" : "1"
            },
            "owsd" : {
                "nodetype" : "namednumber",
                "number" : "2"
            },
            "owds" : {
                "nodetype" : "namednumber",
                "number" : "3"
            },
            "jittersd" : {
                "nodetype" : "namednumber",
                "number" : "4"
            },
            "jitterds" : {
                "nodetype" : "namednumber",
                "number" : "5"
            },
            "jitteravg" : {
                "nodetype" : "namednumber",
                "number" : "6"
            },
            "description" :
                """The following are specific percentile types. These types are
supported by UDP Jitter, ICMP Jitter and Ethernet Jitter
probes:
rtt(1)        - Round Trip Time
owsd(2)       - One way delay - Source to Destination
owds(3)       - One way delay - Destination to Source
jittersd(4)   - One way jitter - Source to Destination
jitterds(5)   - One way jitter - Destination to Source
jitteravg(6)  - Jitter values in both directions.""",
        },
    }, # typedefs

    "nodes" : {
        "ciscoRttMonTCMIB" : {
            "nodetype" : "node",
            "moduleName" : "CISCO-RTTMON-TC-MIB",
            "oid" : "1.3.6.1.4.1.9.9.485",
            "status" : "current",
        }, # node
    }, # nodes

}
