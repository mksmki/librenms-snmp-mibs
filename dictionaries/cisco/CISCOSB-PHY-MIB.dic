# python version 1.0						DO NOT EDIT
#
# Generated by smidump version 0.4.8:
#
#   smidump -f python CISCOSB-PHY-MIB

FILENAME = "/opt/librenms/mibs/cisco/CISCOSB-PHY-MIB"

MIB = {
    "moduleName" : "CISCOSB-PHY-MIB",

    "CISCOSB-PHY-MIB" : {
        "nodetype" : "module",
        "language" : "SMIv2",
        "organization" :    
            """Cisco Systems, Inc.""",
        "contact" : 
            """Postal: 170 West Tasman Drive
San Jose , CA 95134-1706
USA


Website:  Cisco Small Business Support Community <http://www.cisco.com/go/smallbizsupport>""",
        "description" :
            """The MIB module describes the private MIB for testing Layer1 interfaces supported
by CISCOSB's software and products.""",
        "revisions" : (
            {
                "date" : "2004-09-10 00:00",
                "description" :
                    """[Revision added by libsmi due to a LAST-UPDATED clause.]""",
            },
            {
                "date" : "2003-09-21 00:24",
                "description" :
                    """Added MODULE-IDENTITY and TEXTUAL-CONVENTION IMPORTS.""",
            },
            {
                "date" : "2002-09-30 00:24",
                "description" :
                    """Initial revision""",
            },
        ),
        "identity node" : "rlPhy",
    },

    "imports" : (
        {"module" : "SNMPv2-SMI", "name" : "OBJECT-TYPE"},
        {"module" : "SNMPv2-SMI", "name" : "MODULE-IDENTITY"},
        {"module" : "IF-MIB", "name" : "ifIndex"},
        {"module" : "SNMPv2-TC", "name" : "TimeStamp"},
        {"module" : "SNMPv2-TC", "name" : "DisplayString"},
        {"module" : "CISCOSB-MIB", "name" : "switch001"},
        {"module" : "SNMPv2-TC", "name" : "TEXTUAL-CONVENTION"},
    ),

    "typedefs" : {
        "RlPhyTestType" : {
            "basetype" : "Enumeration",
            "status" : "current",
            "rlPhyTestTableNoTest" : {
                "nodetype" : "namednumber",
                "number" : "1"
            },
            "rlPhyTestTableCableStatus" : {
                "nodetype" : "namednumber",
                "number" : "2"
            },
            "rlPhyTestTableCableFault" : {
                "nodetype" : "namednumber",
                "number" : "3"
            },
            "rlPhyTestTableCableLength" : {
                "nodetype" : "namednumber",
                "number" : "4"
            },
            "rlPhyTestTableTransceiverTemp" : {
                "nodetype" : "namednumber",
                "number" : "5"
            },
            "rlPhyTestTableTransceiverSupply" : {
                "nodetype" : "namednumber",
                "number" : "6"
            },
            "rlPhyTestTableTxBias" : {
                "nodetype" : "namednumber",
                "number" : "7"
            },
            "rlPhyTestTableTxOutput" : {
                "nodetype" : "namednumber",
                "number" : "8"
            },
            "rlPhyTestTableRxOpticalPower" : {
                "nodetype" : "namednumber",
                "number" : "9"
            },
            "rlPhyTestTableDataReady" : {
                "nodetype" : "namednumber",
                "number" : "10"
            },
            "rlPhyTestTableLOS" : {
                "nodetype" : "namednumber",
                "number" : "11"
            },
            "rlPhyTestTableTxFault" : {
                "nodetype" : "namednumber",
                "number" : "12"
            },
            "rlPhyTestTableCableChannel1" : {
                "nodetype" : "namednumber",
                "number" : "13"
            },
            "rlPhyTestTableCableChannel2" : {
                "nodetype" : "namednumber",
                "number" : "14"
            },
            "rlPhyTestTableCableChannel3" : {
                "nodetype" : "namednumber",
                "number" : "15"
            },
            "rlPhyTestTableCableChannel4" : {
                "nodetype" : "namednumber",
                "number" : "16"
            },
            "rlPhyTestTableCablePolarity1" : {
                "nodetype" : "namednumber",
                "number" : "17"
            },
            "rlPhyTestTableCablePolarity2" : {
                "nodetype" : "namednumber",
                "number" : "18"
            },
            "rlPhyTestTableCablePolarity3" : {
                "nodetype" : "namednumber",
                "number" : "19"
            },
            "rlPhyTestTableCablePolarity4" : {
                "nodetype" : "namednumber",
                "number" : "20"
            },
            "rlPhyTestTableCablePairSkew1" : {
                "nodetype" : "namednumber",
                "number" : "21"
            },
            "rlPhyTestTableCablePairSkew2" : {
                "nodetype" : "namednumber",
                "number" : "22"
            },
            "rlPhyTestTableCablePairSkew3" : {
                "nodetype" : "namednumber",
                "number" : "23"
            },
            "rlPhyTestTableCablePairSkew4" : {
                "nodetype" : "namednumber",
                "number" : "24"
            },
            "rlPhyTestTableSFPEepromQualified" : {
                "nodetype" : "namednumber",
                "number" : "25"
            },
            "description" :
                """A value indicating the test to perform.""",
        },
    }, # typedefs

    "nodes" : {
        "rlPhy" : {
            "nodetype" : "node",
            "moduleName" : "CISCOSB-PHY-MIB",
            "oid" : "1.3.6.1.4.1.9.6.1.101.90",
            "status" : "current",
        }, # node
        "rlPhyTest" : {
            "nodetype" : "node",
            "moduleName" : "CISCOSB-PHY-MIB",
            "oid" : "1.3.6.1.4.1.9.6.1.101.90.1",
        }, # node
        "rlPhyTestSetTable" : {
            "nodetype" : "table",
            "moduleName" : "CISCOSB-PHY-MIB",
            "oid" : "1.3.6.1.4.1.9.6.1.101.90.1.1",
            "status" : "current",
            "description" :
                """""",
        }, # table
        "rlPhyTestSetEntry" : {
            "nodetype" : "row",
            "moduleName" : "CISCOSB-PHY-MIB",
            "oid" : "1.3.6.1.4.1.9.6.1.101.90.1.1.1",
            "status" : "current",
            "linkage" : [
                "ifIndex",
            ],
            "description" :
                """An entry containing objects for invoking tests on an interface.""",
        }, # row
        "rlPhyTestSetType" : {
            "nodetype" : "column",
            "moduleName" : "CISCOSB-PHY-MIB",
            "oid" : "1.3.6.1.4.1.9.6.1.101.90.1.1.1.1",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"CISCOSB-PHY-MIB", "name" : "RlPhyTestType"},
            },
            "access" : "readwrite",
            "description" :
                """A control variable used to start operator initiated interface
tests.1 indicates that no test has been initiated. Only
operator initiated interface tests can be set to this variable.""",
        }, # column
        "rlPhyTestGetTable" : {
            "nodetype" : "table",
            "moduleName" : "CISCOSB-PHY-MIB",
            "oid" : "1.3.6.1.4.1.9.6.1.101.90.1.2",
            "status" : "current",
            "description" :
                """""",
        }, # table
        "rlPhyTestGetEntry" : {
            "nodetype" : "row",
            "moduleName" : "CISCOSB-PHY-MIB",
            "oid" : "1.3.6.1.4.1.9.6.1.101.90.1.2.1",
            "status" : "current",
            "linkage" : [
                "ifIndex",
                "rlPhyTestGetType",
            ],
            "description" :
                """An entry containing results of tests on an interface.""",
        }, # row
        "rlPhyTestGetType" : {
            "nodetype" : "column",
            "moduleName" : "CISCOSB-PHY-MIB",
            "oid" : "1.3.6.1.4.1.9.6.1.101.90.1.2.1.1",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"CISCOSB-PHY-MIB", "name" : "RlPhyTestType"},
            },
            "access" : "readonly",
            "description" :
                """A control variable used to, 1 to indicate that this test can be
done on the specified port, 2 to initiate the test whenever the
user wishes""",
        }, # column
        "rlPhyTestGetStatus" : {
            "nodetype" : "column",
            "moduleName" : "CISCOSB-PHY-MIB",
            "oid" : "1.3.6.1.4.1.9.6.1.101.90.1.2.1.2",
            "status" : "current",
            "syntax" : {
                "type" :                 {
                    "basetype" : "Enumeration",
                    "none" : {
                        "nodetype" : "namednumber",
                        "number" : "1"
                    },
                    "success" : {
                        "nodetype" : "namednumber",
                        "number" : "2"
                    },
                    "inProgress" : {
                        "nodetype" : "namednumber",
                        "number" : "3"
                    },
                    "notSupported" : {
                        "nodetype" : "namednumber",
                        "number" : "4"
                    },
                    "unAbleToRun" : {
                        "nodetype" : "namednumber",
                        "number" : "5"
                    },
                    "aborted" : {
                        "nodetype" : "namednumber",
                        "number" : "6"
                    },
                    "failed" : {
                        "nodetype" : "namednumber",
                        "number" : "7"
                    },
                },
            },
            "access" : "readonly",
            "description" :
                """This object contains the status of the most recently
requested test for operator initiated tests or the value
none(1) if no tests have been requested since the last
reset. For non operator initiated tests the value is always
none(1).
Note that this facility provides no provision for saving
the results of one test when starting another, as could
be required if used by multiple managers concurrently.""",
        }, # column
        "rlPhyTestGetResult" : {
            "nodetype" : "column",
            "moduleName" : "CISCOSB-PHY-MIB",
            "oid" : "1.3.6.1.4.1.9.6.1.101.90.1.2.1.3",
            "status" : "current",
            "syntax" : {
                "type" : { "module" :"", "name" : "Integer32"},
            },
            "access" : "readonly",
            "description" :
                """This object holds the test result""",
        }, # column
        "rlPhyTestGetUnits" : {
            "nodetype" : "column",
            "moduleName" : "CISCOSB-PHY-MIB",
            "oid" : "1.3.6.1.4.1.9.6.1.101.90.1.2.1.4",
            "status" : "current",
            "syntax" : {
                "type" :                 {
                    "basetype" : "Enumeration",
                    "integer" : {
                        "nodetype" : "namednumber",
                        "number" : "1"
                    },
                    "boolean" : {
                        "nodetype" : "namednumber",
                        "number" : "2"
                    },
                    "downUP" : {
                        "nodetype" : "namednumber",
                        "number" : "3"
                    },
                    "reverseNormal" : {
                        "nodetype" : "namednumber",
                        "number" : "4"
                    },
                    "mdiMdix" : {
                        "nodetype" : "namednumber",
                        "number" : "5"
                    },
                    "meter" : {
                        "nodetype" : "namednumber",
                        "number" : "6"
                    },
                    "degree" : {
                        "nodetype" : "namednumber",
                        "number" : "7"
                    },
                    "microVolt" : {
                        "nodetype" : "namednumber",
                        "number" : "8"
                    },
                    "microOham" : {
                        "nodetype" : "namednumber",
                        "number" : "9"
                    },
                    "microAmper" : {
                        "nodetype" : "namednumber",
                        "number" : "10"
                    },
                    "microWatt" : {
                        "nodetype" : "namednumber",
                        "number" : "11"
                    },
                    "millisecond" : {
                        "nodetype" : "namednumber",
                        "number" : "12"
                    },
                    "alaskaPhyLength" : {
                        "nodetype" : "namednumber",
                        "number" : "13"
                    },
                    "alaskaPhyStatus" : {
                        "nodetype" : "namednumber",
                        "number" : "14"
                    },
                    "dbm" : {
                        "nodetype" : "namednumber",
                        "number" : "15"
                    },
                    "decidbm" : {
                        "nodetype" : "namednumber",
                        "number" : "16"
                    },
                    "milidbm" : {
                        "nodetype" : "namednumber",
                        "number" : "17"
                    },
                    "abcd" : {
                        "nodetype" : "namednumber",
                        "number" : "18"
                    },
                    "nanosecond" : {
                        "nodetype" : "namednumber",
                        "number" : "19"
                    },
                },
            },
            "access" : "readonly",
            "description" :
                """The test result unit of measure. The units can be standard unit or special units
that are designed for special test.

The alaskaPhyLength unit is design for the VCT diagnostic and its values are:
less-than-50M(1), 50-80M(2), 80-110M(3), 110-140M(4), more-than-140M(5).

The alaskaPhyStatus unit is design for the VCT diagnostic and its values are:
4-pair-cable(1), 2-pair-cable(2), no-cable(3), open-cable(4), short-cable(5), bad-cable(6), impedance-mismatch(7).""",
        }, # column
        "rlPhyTestGetAlarm" : {
            "nodetype" : "column",
            "moduleName" : "CISCOSB-PHY-MIB",
            "oid" : "1.3.6.1.4.1.9.6.1.101.90.1.2.1.5",
            "status" : "current",
            "syntax" : {
                "type" :                 {
                    "basetype" : "Enumeration",
                    "notRelevant" : {
                        "nodetype" : "namednumber",
                        "number" : "1"
                    },
                    "noAlarmSet" : {
                        "nodetype" : "namednumber",
                        "number" : "2"
                    },
                    "lowWarning" : {
                        "nodetype" : "namednumber",
                        "number" : "3"
                    },
                    "highWarning" : {
                        "nodetype" : "namednumber",
                        "number" : "4"
                    },
                    "lowAlarm" : {
                        "nodetype" : "namednumber",
                        "number" : "5"
                    },
                    "highAlarm" : {
                        "nodetype" : "namednumber",
                        "number" : "6"
                    },
                },
            },
            "access" : "readonly",
            "description" :
                """This object hold the Alarm for this Entry. only Test that have can have alarms
use this field, other holds the Value notRelevant(1) """,
        }, # column
        "rlPhyTestGetTimeStamp" : {
            "nodetype" : "column",
            "moduleName" : "CISCOSB-PHY-MIB",
            "oid" : "1.3.6.1.4.1.9.6.1.101.90.1.2.1.6",
            "status" : "current",
            "syntax" : {
                "type" :                 {
                    "basetype" : "OctetString",
                    "parent module" : {
                        "name" : "SNMPv2-TC",
                        "type" : "DisplayString",
                    },
                    "ranges" : [
                    {
                        "min" : "1",
                        "max" : "32"
                    },
                    ],
                    "range" : {
                        "min" : "1",
                        "max" : "32"
                    },
                },
            },
            "access" : "readonly",
            "description" :
                """The time in string (formated DD-MMM-YYYY HH:MM:SS e.g
14-Apr-2002 10:33:31)""",
        }, # column
    }, # nodes

}
